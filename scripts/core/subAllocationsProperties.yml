#
# Copyright (C) 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension for querying sub-allocations properties."
version: "1.5"
--- #--------------------------------------------------------------------------
type: macro
desc: "Sub-Allocations Properties Extension Name"
version: "1.5"
name: $X_SUB_ALLOCATIONS_EXP_NAME
value: '"$X_experimental_sub_allocations"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Sub-Allocations Properties Extension Version(s)"
version: "1.5"
name: $x_sub_allocations_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: struct
desc: "Properties returned for a sub-allocation"
version: "1.5"
class: $xMem
name: $x_sub_allocation_t
members:
    - type: "void*"
      name: base
      desc: "[in,out][optional] base address of the sub-allocation"
    - type: size_t
      name: size
      desc: "[in,out][optional] size of the allocation"
--- #--------------------------------------------------------------------------
type: struct
desc: "Sub-Allocations Properties"
version: "1.5"
class: $xMem
name: $x_memory_sub_allocations_exp_properties_t
base: $x_base_properties_t
members:
    - type: uint32_t*
      name: pCount
      desc: |
            [in,out] pointer to the number of sub-allocations.
            if count is zero, then the driver shall update the value with the total number of sub-allocations on which the allocation has been divided.
            if count is greater than the number of sub-allocations, then the driver shall update the value with the correct number of sub-allocations.
    - type: "$x_sub_allocation_t*"
      name: pSubAllocations
      desc: |
            [in,out][optional][range(0, *pCount)] array of properties for sub-allocations.
            if count is less than the number of sub-allocations available, then driver shall only retrieve properties for that number of sub-allocations.
details:
    - "This structure may be passed to $xMemGetAllocProperties, via the `pNext` member of $x_memory_allocation_properties_t."
