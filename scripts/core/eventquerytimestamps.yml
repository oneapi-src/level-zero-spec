#
# Copyright (C) 2021-2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension for supporting event query timestamps."
version: "1.2"
--- #--------------------------------------------------------------------------
type: macro
desc: "Event Query Timestamps Extension Name"
version: "1.2"
name: $X_EVENT_QUERY_TIMESTAMPS_EXP_NAME
value: '"$X_experimental_event_query_timestamps"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Event Query Timestamps Extension Version(s)"
version: "1.2"
name: $x_event_query_timestamps_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: function
desc: "Query event timestamps for a device or sub-device."
version: "1.2"
class: $xEvent
name: QueryTimestampsExp
decl: static
ordinal: "0"
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function must be thread-safe."
    - "The implementation must support $X_experimental_event_query_timestamps."
    - "The implementation must return all timestamps for the specified event and device pair."
    - "The implementation must return all timestamps for all sub-devices when device handle is parent device."
    - "The implementation may return all timestamps for sub-devices when device handle is sub-device or may return 0 for count."
analogue:
    - None
params:
    - type: $x_event_handle_t
      name: hEvent
      desc: "[in] handle of the event"
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device to query"
    - type: "uint32_t*"
      name: pCount
      desc: |
            [in,out] pointer to the number of timestamp results.
            if count is zero, then the driver shall update the value with the total number of timestamps available.
            if count is greater than the number of timestamps available, then the driver shall update the value with the correct number of timestamps available.
    - type: "$x_kernel_timestamp_result_t*"
      name: pTimestamps
      desc: |
            [in,out][optional][range(0, *pCount)] array of timestamp results.
            if count is less than the number of timestamps available, then driver shall only retrieve that number of timestamps.