#
# Copyright (C) 2025 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension for Device Vector Sizes Query"
version: "1.13"
--- #--------------------------------------------------------------------------
type: macro
desc: "Device Vector Sizes Query Extension Name"
version: "1.13"
name: $X_DEVICE_VECTOR_SIZES_EXT_NAME
value: '"$X_extension_device_vector_sizes"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Device Vector Sizes Query Extension Version(s)"
version: "1.13"
name: $x_device_vector_sizes_ext_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: struct
desc: "Device Vector Width Properties queried using $DeviceGetVectorWidthPropertiesExt"
version: "1.13"
class: $xDevice
name: $x_device_vector_width_properties_ext_t
base: $x_base_properties_t
members:
    - type: uint32_t
      name: vector_width_size
      desc: |
            [out] The associated vector width size supported by the device.
    - type: uint32_t
      name: preferred_vector_width_char
      desc: |
        [out] The preferred vector width size for char type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_short
      desc: |
        [out] The preferred vector width size for short type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_int
      desc: |
        [out] The preferred vector width size for int type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_long
      desc: |
        [out] The preferred vector width size for long type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_float
      desc: |
        [out] The preferred vector width size for float type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_double
      desc: |
        [out] The preferred vector width size for double type supported by the device.
    - type: uint32_t
      name: preferred_vector_width_half
      desc: |
        [out] The preferred vector width size for half type supported by the device.
    - type: uint32_t
      name: native_vector_width_char
      desc: |
        [out] The native vector width size for char type supported by the device.
    - type: uint32_t
      name: native_vector_width_short
      desc: |
        [out] The native vector width size for short type supported by the device.
    - type: uint32_t
      name: native_vector_width_int
      desc: |
        [out] The native vector width size for int type supported by the device.
    - type: uint32_t
      name: native_vector_width_long
      desc: |
        [out] The native vector width size for long type supported by the device.
    - type: uint32_t
      name: native_vector_width_float
      desc: |
        [out] The native vector width size for float type supported by the device.
    - type: uint32_t
      name: native_vector_width_double
      desc: |
        [out] The native vector width size for double type supported by the device.
    - type: uint32_t
      name: native_vector_width_half
      desc: |
        [out] The native vector width size for half type supported by the device.
--- #--------------------------------------------------------------------------
type: function
desc: "Retrieves the vector width properties of the device."
version: "1.13"
class: $xDevice
name: GetVectorWidthPropertiesExt
details:
    - "Properties are reported for each vector width supported by the device."
    - "Multiple calls to this function will return properties in the same order."
    - "The number of vector width properties is reported thru the pCount parameter which is updated by the driver given pCount == 0."
    - "The application may provide a buffer that is larger than the number of properties, but the application must set pCount to the number of properties to retrieve."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "uint32_t*"
      name: pCount
      desc: |
            [in,out] pointer to the number of vector width properties.
            if count is zero, then the driver shall update the value with the total number of vector width properties available.
            if count is greater than the number of vector width properties available, then the driver shall update the value with the correct number of vector width properties available.
      init: "nullptr"
    - type: "$x_device_vector_width_properties_ext_t*"
      name: pVectorWidthProperties
      init: "nullptr"
      desc: |
            [in,out][optional][range(0, *pCount)] array of vector width properties.
            if count is less than the number of properties available, then the driver will return only the number requested.
