#
# Copyright (C) 2021-2023 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension for supporting event query synchronized timestamps."
version: "1.5"
--- #--------------------------------------------------------------------------
type: macro
desc: "Event Query Kernel Timestamps Extension Name"
version: "1.5"
name: $X_EVENT_QUERY_KERNEL_TIMESTAMPS_EXT_NAME
value: '"$X_extension_event_query_kernel_timestamps"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Event Query Kernel Timestamps Extension Version(s)"
version: "1.5"
name: $x_event_query_kernel_timestamps_ext_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: function
desc: "Query an event's timestamp value on the host, with domain preference."
version: "1.5"
class: $xEvent
name: QueryKernelTimestampsExt
details:
    - "The application must ensure the event was created from an event pool that was created using $X_EVENT_POOL_FLAG_KERNEL_TIMESTAMP flag."
    - "The destination memory will be unmodified if the event has not been signaled."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
    - "The implementation must support $X_extension_event_query_kernel_timestamps."
params:
    - type: $x_event_handle_t
      name: hEvent
      desc: "[in] handle of the event"
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device to query"
    - type: "uint32_t*"
      name: pCount
      desc: |
            [in,out] pointer to the number of timestamp results.
            if count is zero, then the driver shall update the value with the total number of timestamps available.
            if count is greater than the number of timestamps available, then the driver shall update the value with the correct number of timestamps available.
    - type: "uint64_t*"
      name: pHostTimestamps
      desc: |
            [in,out][optional][range(0, *pCount)] array of host timestamps that correlate with the device's timestamps.
            if count is less than the number of timestamps available, then driver shall only retrieve that number of host timestamps.
    - type: "uint64_t*"
      name: pDeviceTimestamps
      desc: |
            [in,out][optional][range(0, *pCount)] array of device timestamps that correlate with the host's timestamps.
            if count is less than the number of timestamps available, then driver shall only retrieve that number of (host-correlated) device timestamps.
    - type: "$x_kernel_timestamp_result_t*"
      name: pTimestamps
      desc: |
            [in,out][optional][range(0, *pCount)] array of device timestamp results.
            if count is less than the number of timestamps available, then driver shall only retrieve that number of device timestamps.
