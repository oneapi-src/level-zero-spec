#
# Copyright (C) 2024 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #----------------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Sysman Extension APIs for firmware security version"
version: "1.9"
--- #----------------------------------------------------------------------------------
type: macro
desc: "Firmware security version"
version: "1.9"
name: $S_FIRMWARE_SECURITY_VERSION_EXP_NAME
value: '"$XS_experimental_firmware_security_version"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Firmware security version Extension Version(s)"
version: "1.9"
name: $s_firmware_security_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: function
desc: "Get the firmware security version number of the currently running firmware"
version: "1.9"
class: $sFirmware
name: GetSecurityVersionExp
details:
    - "The application should create a character array of size $S_STRING_PROPERTY_SIZE and reference it for the `pVersion` parameter."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_firmware_handle_t
      name: hFirmware
      desc: "[in] Handle for the component."
    - type: "char*"
      name: "pVersion"
      desc: "[in,out] NULL terminated string value. The string \"unknown\" will be returned if this property cannot be determined."
--- #--------------------------------------------------------------------------
type: function
desc: "Set the firmware security version number"
version: "1.9"
class: $sFirmware
name: SetSecurityVersionExp
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_firmware_handle_t
      name: hFirmware
      desc: "[in] Handle for the component."