#
# Copyright (C) 2023 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Sysman Extension APIs for RAS Get State and Clear State"
version: "1.7"
--- #--------------------------------------------------------------------------
type: macro
desc: "RAS Get State Extension Name"
version: "1.7"
name: $S_RAS_GET_STATE_EXP_NAME
value: '"$XS_extension_ras_state"'
--- #--------------------------------------------------------------------------
type: enum
desc: "RAS Get State Extension Version(s)"
version: "1.7"
name: $s_ras_state_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: enum
desc: "RAS error categories"
version: "1.7"
class: $sRas
name: $s_ras_error_category_exp_t
etors:
    - name: RESET
      value: "0"
      desc: "The number of accelerator engine resets attempted by the driver"
      version: "1.7"
    - name: PROGRAMMING_ERRORS
      desc: "The number of hardware exceptions generated by the way workloads have programmed the hardware"
      version: "1.7"
    - name: DRIVER_ERRORS
      desc: "The number of low level driver communication errors have occurred"
      version: "1.7"
    - name: COMPUTE_ERRORS
      desc: "The number of errors that have occurred in the compute accelerator hardware"
      version: "1.7"
    - name: NON_COMPUTE_ERRORS
      desc: "The number of errors that have occurred in the fixed-function accelerator hardware"
      version: "1.7"
    - name: CACHE_ERRORS
      desc: "The number of errors that have occurred in caches (L1/L3/register file/shared local memory/sampler)"
      version: "1.7"
    - name: DISPLAY_ERRORS
      desc: "The number of errors that have occurred in the display"
      version: "1.7"
    - name: MEMORY_ERRORS
      desc: "The number of errors that have occurred in Memory"
      version: "1.7"
    - name: SCALE_ERRORS
      desc: "The number of errors that have occurred in Scale Fabric"
      version: "1.7"
    - name: L3FABRIC_ERRORS
      desc: "The number of errors that have occurred in L3 Fabric"
      version: "1.7"
--- #--------------------------------------------------------------------------
type: struct
desc: "Extension structure for providing RAS error counters for different error sets"
version: "1.7"
class: $sRas
name: $s_ras_state_exp_t
members:
    - type: $s_ras_error_category_exp_t
      name: "category"
      desc: "[out] category for which error counter is provided."
    - type: uint64_t
      name: errorCounter
      desc: "[out] Current value of RAS counter for specific error category."
--- #--------------------------------------------------------------------------
type: function
desc: "Ras Get State"
class: $sRas
name: GetStateExp
details:
    - "This function retrieves error counters for different RAS error categories."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_ras_handle_t
      name: hRas
      desc: "[in] Handle for the component."
    - type: uint32_t*
      name: pCount
      desc: |
            [in,out] pointer to the number of RAS state structures that can be retrieved.
            if count is zero, then the driver shall update the value with the total number of error categories for which state can be retrieved.
            if count is greater than the number of RAS states available, then the driver shall update the value with the correct number of RAS states available.
    - type: $s_ras_state_exp_t*
      name: pState
      desc: |
            [in,out][optional][range(0, *pCount)] array of query results for RAS error states for different categories.
            if count is less than the number of RAS states available, then driver shall only retrieve that number of RAS states.
--- #--------------------------------------------------------------------------
type: function
desc: "Ras Clear State"
class: $sRas
name: ClearStateExp
details:
    - "This function clears error counters for a RAS error category."
    - "Clearing errors will affect other threads/applications - the counter values will start from zero."
    - "Clearing errors requires write permissions."
    - "The application should not call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_ras_handle_t
      name: hRas
      desc: "[in] Handle for the component."
    - type: $s_ras_error_category_exp_t
      name: "category"
      desc: "[in] category for which error counter is to be cleared."
returns:
    - $X_RESULT_ERROR_INSUFFICIENT_PERMISSIONS:
        - "Don't have permissions to clear error counters."