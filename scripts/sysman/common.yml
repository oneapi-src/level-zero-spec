#
# Copyright (C) 2019-2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Sysman API common types"
ordinal: "0"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle to a driver instance"
class: $sDriver
name: "$s_driver_handle_t"
alias: "$x_driver_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle of device object"
class: $sDevice
name: "$s_device_handle_t"
alias: "$x_device_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device scheduler queue"
class: $sScheduler
name: "$s_sched_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device performance factors"
class: $sPerformanceFactor
name: "$s_perf_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device power domain"
class: $sPower
name: "$s_pwr_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device frequency domain"
class: $sFrequency
name: "$s_freq_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device engine group"
class: $sEngine
name: "$s_engine_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device standby control"
class: $sStandby
name: "$s_standby_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device firmware"
class: $sFirmware
name: "$s_firmware_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device memory module"
class: $sMemory
name: "$s_mem_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman fabric port"
class: $sFabricPort
name: "$s_fabric_port_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device temperature sensor"
class: $sTemperature
name: "$s_temp_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device power supply"
class: $sPsu
name: "$s_psu_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device fan"
class: $sFan
name: "$s_fan_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device LED"
class: $sLed
name: "$s_led_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device RAS error set"
class: $sRas
name: "$s_ras_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device diagnostics test suite"
class: $sDiagnostics
name: "$s_diag_handle_t"
--- #--------------------------------------------------------------------------
type: handle
desc: "Handle for a Sysman device overclock domain"
class: $sOverclock
name: "$s_overclock_handle_t"
version: "1.5"
--- #--------------------------------------------------------------------------
type: enum
desc: "Defines structure types"
name: $s_structure_type_t
etors:
    - name: DEVICE_PROPERTIES
      desc: $s_device_properties_t
      value: "0x1"
    - name: PCI_PROPERTIES
      desc: $s_pci_properties_t
    - name: PCI_BAR_PROPERTIES
      desc: $s_pci_bar_properties_t
    - name: DIAG_PROPERTIES
      desc: $s_diag_properties_t
    - name: ENGINE_PROPERTIES
      desc: $s_engine_properties_t
    - name: FABRIC_PORT_PROPERTIES
      desc: $s_fabric_port_properties_t
    - name: FAN_PROPERTIES
      desc: $s_fan_properties_t
    - name: FIRMWARE_PROPERTIES
      desc: $s_firmware_properties_t
    - name: FREQ_PROPERTIES
      desc: $s_freq_properties_t
    - name: LED_PROPERTIES
      desc: $s_led_properties_t
    - name: MEM_PROPERTIES
      desc: $s_mem_properties_t
    - name: PERF_PROPERTIES
      desc: $s_perf_properties_t
    - name: POWER_PROPERTIES
      desc: $s_power_properties_t
    - name: PSU_PROPERTIES
      desc: $s_psu_properties_t
    - name: RAS_PROPERTIES
      desc: $s_ras_properties_t
    - name: SCHED_PROPERTIES
      desc: $s_sched_properties_t
    - name: SCHED_TIMEOUT_PROPERTIES
      desc: $s_sched_timeout_properties_t
    - name: SCHED_TIMESLICE_PROPERTIES
      desc: $s_sched_timeslice_properties_t
    - name: STANDBY_PROPERTIES
      desc: $s_standby_properties_t
    - name: TEMP_PROPERTIES
      desc: $s_temp_properties_t
    - name: DEVICE_STATE
      desc: $s_device_state_t
    - name: PROCESS_STATE
      desc: $s_process_state_t
    - name: PCI_STATE
      desc: $s_pci_state_t
    - name: FABRIC_PORT_CONFIG
      desc: $s_fabric_port_config_t
    - name: FABRIC_PORT_STATE
      desc: $s_fabric_port_state_t
    - name: FAN_CONFIG
      desc: $s_fan_config_t
    - name: FREQ_STATE
      desc: $s_freq_state_t
    - name: OC_CAPABILITIES
      desc: $s_oc_capabilities_t
    - name: LED_STATE
      desc: $s_led_state_t
    - name: MEM_STATE
      desc: $s_mem_state_t
    - name: PSU_STATE
      desc: $s_psu_state_t
    - name: BASE_STATE
      desc: $s_base_state_t
    - name: RAS_CONFIG
      desc: $s_ras_config_t
    - name: RAS_STATE
      desc: $s_ras_state_t
    - name: TEMP_CONFIG
      desc: $s_temp_config_t
    - name: PCI_BAR_PROPERTIES_1_2
      desc: $s_pci_bar_properties_1_2_t
      version: "1.2"
    - name: DEVICE_ECC_DESC
      desc: $s_device_ecc_desc_t
      version: "1.4"
    - name: DEVICE_ECC_PROPERTIES
      desc: $s_device_ecc_properties_t
      version: "1.4"
    - name: POWER_LIMIT_EXT_DESC
      desc: $s_power_limit_ext_desc_t
      version: "1.4"
    - name: POWER_EXT_PROPERTIES
      desc: $s_power_ext_properties_t
      version: "1.4"
    - name: OVERCLOCK_PROPERTIES
      desc: $s_overclock_properties_t
      version: "1.5"
    - name: FABRIC_PORT_ERROR_COUNTERS
      desc: $s_fabric_port_error_counters_t
      version: "1.7"      
--- #-------------------------------------------------------------------------
type: struct
desc: "Base for all properties types"
name: $s_base_properties_t
members:
    - type: $s_structure_type_t
      name: stype
      desc: "[in] type of this structure"
    - type: "void*"
      name: pNext
      desc: "[in,out][optional] must be null or a pointer to an extension-specific structure (i.e. contains stype and pNext)."
      init: nullptr
--- #--------------------------------------------------------------------------
type: struct
desc: "Base for all descriptor types"
name: $s_base_desc_t
members:
    - type: $s_structure_type_t
      name: stype
      desc: "[in] type of this structure"
    - type: "const void*"
      name: pNext
      desc: "[in][optional] must be null or a pointer to an extension-specific structure (i.e. contains stype and pNext)."
      init: nullptr
--- #--------------------------------------------------------------------------
type: struct
desc: "Base for all state types"
name: $s_base_state_t
members:
    - type: $s_structure_type_t
      name: stype
      desc: "[in] type of this structure"
    - type: "const void*"
      name: pNext
      desc: "[in][optional] must be null or a pointer to an extension-specific structure (i.e. contains stype and pNext)."
      init: nullptr
--- #--------------------------------------------------------------------------
type: struct
desc: "Base for all config types"
name: $s_base_config_t
members:
    - type: $s_structure_type_t
      name: stype
      desc: "[in] type of this structure"
    - type: "const void*"
      name: pNext
      desc: "[in][optional] must be null or a pointer to an extension-specific structure (i.e. contains stype and pNext)."
      init: nullptr
--- #--------------------------------------------------------------------------
type: struct
desc: "Base for all capability types"
name: $s_base_capability_t
members:
    - type: $s_structure_type_t
      name: stype
      desc: "[in] type of this structure"
    - type: "const void*"
      name: pNext
      desc: "[in][optional] must be null or a pointer to an extension-specific structure (i.e. contains stype and pNext)."
      init: nullptr
