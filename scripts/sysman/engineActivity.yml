#
# Copyright (C) 2023 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Sysman Extension APIs for Engine Activity"
version: "1.7"
--- #--------------------------------------------------------------------------
type: macro
desc: "Engine Activity Extension Name"
version: "1.7"
name: $S_ENGINE_ACTIVITY_EXT_NAME
value: '"$XS_extension_engine_activity"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Engine Activity Extension Version(s)"
version: "1.7"
name: $s_engine_activity_ext_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: struct
desc: "Extension properties related to Engine Groups"
version: "1.7"
class: $sEngine
name: $s_engine_ext_properties_t
base: $s_base_properties_t
members:
    - type: uint32_t
      name: "countOfVirtualFunctionInstance"
      desc: |
            [out] Number of Virtual Function(VF) instances associated with engine to monitor the utilization of hardware across all Virtual Function from a Physical Function (PF) instance.
            These VF-by-VF views should provide engine group and individual engine level granularity.
            This count represents the number of VF instances that are actively using the resource represented by the engine handle.
details:
    - "This structure may be passed to $sEngineGetProperties by having the pNext member of $s_engine_properties_t point at this struct."
    - "Used for SRIOV per Virtual Function device utilization by $s_engine_group_t"
--- #--------------------------------------------------------------------------
type: function
desc: "Get activity stats for Physical Function (PF) and each Virtual Function (VF) associated with engine group."
version: "1.7"
class: $sEngine
name: GetActivityExt
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_engine_handle_t
      name: hEngine
      desc: "[in] Handle for the component."
    - type: uint32_t*
      name: pCount
      desc: |
            [in,out] Pointer to the number of VF engine stats descriptors.
              - if count is zero, the driver shall update the value with the total number of engine stats available.
              - if count is greater than the total number of engine stats available, the driver shall update the value with the correct number of engine stats available.
              - The count returned is the sum of number of VF instances currently available and the PF instance.
    - type: $s_engine_stats_t*
      name: pStats
      desc: |
            [in,out][optional][range(0, *pCount)] array of engine group activity counters.
              - if count is less than the total number of engine stats available, then driver shall only retrieve that number of stats.
              - the implementation shall populate the vector with engine stat for PF at index 0 of the vector followed by user provided pCount-1 number of VF engine stats.
returns:
    - $X_RESULT_ERROR_UNSUPPORTED_FEATURE
        - "Engine activity extension is not supported in the environment."