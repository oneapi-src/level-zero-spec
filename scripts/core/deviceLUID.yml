#
# Copyright (C) 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension APIs for Device Local Identifier (LUID)"
version: "1.4"
--- #--------------------------------------------------------------------------
type: macro
desc: "Device Local Identifier (LUID) Extension Name"
version: "1.4"
name: $X_DEVICE_LUID_EXT_NAME
value: '"$X_extension_device_luid"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Device Local Identifier (LUID) Extension Version(s)"
version: "1.4"
name: $x_device_luid_ext_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: macro
desc: "Maximum device local identifier (LUID) size in bytes"
version: "1.4"
name: $X_MAX_DEVICE_LUID_SIZE_EXT
value: "8"
--- #--------------------------------------------------------------------------
type: struct
desc: "Device local identifier (LUID)"
name: "$x_device_luid_ext_t"
members:
    - type: uint8_t
      name: "id[$X_MAX_DEVICE_LUID_SIZE_EXT]"
      desc: "[out] opaque data representing a device LUID"
--- #--------------------------------------------------------------------------
type: struct
desc: "Device LUID properties queried using $xDeviceGetProperties"
version: "1.4"
class: $xDevice
name: $x_device_luid_ext_properties_t
base: $x_base_properties_t
members:
    - type: $x_device_luid_ext_t
      name: luid
      desc: |
            [out] locally unique identifier (LUID).
            The returned LUID can be cast to a LUID object and must be equal to the locally
            unique identifier of an IDXGIAdapter1 object that corresponds to the device.
    - type: "uint32_t"
      name: nodeMask
      desc: |
            [out] node mask.
            The returned node mask must contain exactly one bit.
            If the device is running on an operating system that supports the Direct3D 12 API
            and the device corresponds to an individual device in a linked device adapter, the
            returned node mask identifies the Direct3D 12 node corresponding to the device.
            Otherwise, the returned node mask must be 1.

details:
    - "This structure may be returned from $xDeviceGetProperties, via the `pNext` member of $x_device_properties_t."
