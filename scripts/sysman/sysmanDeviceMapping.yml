#
# Copyright (C) 2024 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #----------------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Sysman Extension APIs for Sysman Device Mapping"
version: "1.9"
--- #----------------------------------------------------------------------------------
type: macro
desc: "Sysman Device Mapping Extension Name"
version: "1.9"
name: $S_SYSMAN_DEVICE_MAPPING_EXP_NAME
value: '"$XS_experimental_sysman_device_mapping"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Sysman Device Mapping Extension Version(s)"
version: "1.9"
name: $s_sysman_device_mapping_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: struct
desc: "Sub Device Properties"
version: "1.9"
class: $sDevice
name: $s_subdevice_exp_properties_t
base: $s_base_properties_t
members:
    - type: uint32_t
      name: "subdeviceId"
      desc: "[out] this gives the ID of the sub device"
    - type: $s_uuid_t
      name: "uuid"
      desc: "[out] universal unique identifier of the sub device." 
--- #--------------------------------------------------------------------------
type: function
desc: "Retrieves sub device properties for the given sysman device handle"
version: "1.9"
class: $sDevice
name: GetSubDevicePropertiesExp 
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: "hDevice"
      desc: "[in] Sysman handle of the device."
    - type: "uint32_t*"
      name: pCount
      desc: |
            [in,out] pointer to the number of sub devices.
            if count is zero, then the driver shall update the value with the total number of sub devices currently attached to the device.
            if count is greater than the number of sub devices currently attached to the device, then the driver shall update the value with the correct number of sub devices.
    - type: $s_subdevice_exp_properties_t*
      name: pSubdeviceProps
      desc: |
            [in,out][optional][range(0, *pCount)] array of sub device property structures.
            if count is less than the number of sysman sub devices available, then the driver shall only retrieve that number of sub device property structures.
--- #--------------------------------------------------------------------------
type: function
desc: "Retrieves sysman device and subdevice index for the given UUID and sysman driver"
version: "1.9"
class: $sDriver
name: GetDeviceByUuidExp
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_driver_handle_t
      name: "hDriver"
      desc: "[in] handle of the sysman driver instance"
    - type: $s_uuid_t
      name: "uuid"
      desc: "[in] universal unique identifier."           
    - type: $s_device_handle_t*
      name: "phDevice"
      desc: "[out] Sysman handle of the device."
    - type: $x_bool_t*
      name: "onSubdevice"
      desc: "[out] True if the UUID belongs to the sub-device; false means that UUID belongs to the root device."
    - type: "uint32_t*"
      name: "subdeviceId"
      desc: "[out] If onSubdevice is true, this gives the ID of the sub-device"
