#
# Copyright (C) 2021-2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Extension for supporting image views."
version: "1.2"
--- #--------------------------------------------------------------------------
type: macro
desc: "Image View Extension Name"
version: "1.2"
name: $X_IMAGE_VIEW_EXP_NAME
value: '"$X_experimental_image_view"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Image View Extension Version(s)"
version: "1.2"
name: $x_image_view_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: function
desc: "Create image view on the context."
version: "1.2"
class: $xImage
name: ViewCreateExp
decl: static
ordinal: "0"
details:
    - "The application must only use the image view for the device, or its sub-devices, which was provided during creation."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function must be thread-safe."
    - "The implementation must support $X_experimental_image_view extension."
    - "Image views are treated as images from the API."
    - "Image views provide a mechanism to redescribe how an image is interpreted (e.g. different format)."
    - "Image views become disabled when their corresponding image resource is destroyed."
    - "Use $xImageDestroy to destroy image view objects."
analogue:
    - None
params:
    - type: $x_context_handle_t
      name: hContext
      desc: "[in] handle of the context object"
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "const $x_image_desc_t*"
      name: desc
      desc: "[in] pointer to image descriptor"
    - type: "$x_image_handle_t"
      name: hImage
      desc: "[in] handle of image object to create view from"
    - type: "$x_image_handle_t*"
      name: phImageView
      desc: "[out] pointer to handle of image object created for view"
returns:
    - $X_RESULT_ERROR_UNSUPPORTED_IMAGE_FORMAT
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY